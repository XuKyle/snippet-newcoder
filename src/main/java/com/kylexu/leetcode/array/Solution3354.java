package com.kylexu.leetcode.array;

/**
 * 示例 1：
 * <p>
 * 输入：nums = [1,0,2,0,3]
 * <p>
 * 输出：2
 * <p>
 * 解释：
 * <p>
 * 可能的有效选择方案如下：
 * <p>
 * 选择 curr = 3 并向左移动。
 * [1,0,2,0,3] -> [1,0,2,0,3] -> [1,0,1,0,3] -> [1,0,1,0,3] -> [1,0,1,0,2] -> [1,0,1,0,2] -> [1,0,0,0,2] -> [1,0,0,0,2] -> [1,0,0,0,1] -> [1,0,0,0,1] -> [1,0,0,0,1] -> [1,0,0,0,1] -> [0,0,0,0,1] -> [0,0,0,0,1] -> [0,0,0,0,1] -> [0,0,0,0,1] -> [0,0,0,0,0].
 * 选择 curr = 3 并向右移动。
 * [1,0,2,0,3] -> [1,0,2,0,3] -> [1,0,2,0,2] -> [1,0,2,0,2] -> [1,0,1,0,2] -> [1,0,1,0,2] -> [1,0,1,0,1] -> [1,0,1,0,1] -> [1,0,0,0,1] -> [1,0,0,0,1] -> [1,0,0,0,0] -> [1,0,0,0,0] -> [1,0,0,0,0] -> [1,0,0,0,0] -> [0,0,0,0,0].
 * 示例 2：
 * <p>
 * 输入：nums = [2,3,4,0,4,1,0]
 * <p>
 * 输出：0
 * <p>
 * 解释：
 * <p>
 * 不存在有效的选择方案。
 */
public class Solution3354 {
    public static void main(String[] args) {
        int[] nums = {1, 0, 2, 0, 3};
        int rs = new Solution3354().countValidSelections(nums);
        System.out.println("rs = " + rs);
    }

    public int countValidSelections(int[] nums) {
        int rs = 0;

        return rs;
    }
}
